### IT Literature Shop API Tests
### Make sure server is running: npm run dev

### Variables
@baseUrl = http://localhost:8080
@token = 

### ============================================
### PUBLIC ENDPOINTS (No Auth Required)
### ============================================

### 1. Health Check
GET {{baseUrl}}/health-check

### ============================================
### AUTHENTICATION
### ============================================

### 2a. Login as TEST USER (Copy the token from response and paste above in @token)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

### 2b. Login as ADMIN (Copy the token from response and paste above in @token)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "password123"
}

### 2c. Login as JOHN DOE (Copy the token from response and paste above in @token)
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "username": "johndoe",
  "password": "password123"
}

### ============================================
### PROTECTED ENDPOINTS (Require Auth)
### After login, paste the token in @token variable above
### ============================================

### 3. Get Current User
GET {{baseUrl}}/auth/me
Authorization: Bearer {{token}}

### 4. Get All Genres (copy any id from response)
GET {{baseUrl}}/genre
Authorization: Bearer {{token}}

### 5. Get Genre by ID (replace with actual UUID from step 4)
GET {{baseUrl}}/genre/PASTE-GENRE-ID-HERE
Authorization: Bearer {{token}}

### 6. Get All Books (copy any id from response)
GET {{baseUrl}}/books
Authorization: Bearer {{token}}

### 7. Get Book by ID (replace with actual UUID from step 6)
GET {{baseUrl}}/books/PASTE-BOOK-ID-HERE
Authorization: Bearer {{token}}

### 8. Get Books by Genre (replace with genre UUID from step 4)
GET {{baseUrl}}/books/genre/PASTE-GENRE-ID-HERE
Authorization: Bearer {{token}}

### 9. Create New Genre
POST {{baseUrl}}/genre
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Cloud Computing"
}

### 10. Create Transaction
POST {{baseUrl}}/transactions
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "items": [
    {
      "book_id": "PASTE-BOOK-ID-HERE",
      "quantity": 2
    }
  ]
}

### 11. Get All Transactions
GET {{baseUrl}}/transactions
Authorization: Bearer {{token}}

### 12. Get Transaction Statistics
GET {{baseUrl}}/transactions/statistics
Authorization: Bearer {{token}}
