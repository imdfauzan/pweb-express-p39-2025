{
	"info": {
		"_postman_id": "it-literature-shop-api",
		"name": "IT Literature Shop API",
		"description": "Complete API testing collection for IT Literature Shop backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"password\": \"password123\",\n  \"email\": \"newuser@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Save the token to environment variable",
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data && jsonData.data.token) {",
									"        pm.environment.set(\"auth_token\", jsonData.data.token);",
									"        console.log(\"Token saved:\", jsonData.data.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials. Token will be auto-saved."
					},
					"response": []
				},
				{
					"name": "Get Current User (Me)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"me"
							]
						},
						"description": "Get currently authenticated user information"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration and login"
		},
		{
			"name": "Genres",
			"item": [
				{
					"name": "Create Genre",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Mobile Development\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/genre",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"genre"
							]
						},
						"description": "Create a new genre (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get All Genres",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/genre",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"genre"
							]
						},
						"description": "Get all genres (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get Genre By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/genre/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"genre",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "genre-uuid-here"
								}
							]
						},
						"description": "Get a specific genre by ID"
					},
					"response": []
				},
				{
					"name": "Update Genre",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Genre Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/genre/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"genre",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "genre-uuid-here"
								}
							]
						},
						"description": "Update a genre by ID"
					},
					"response": []
				},
				{
					"name": "Delete Genre",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/genre/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"genre",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "genre-uuid-here"
								}
							]
						},
						"description": "Delete a genre by ID (soft delete)"
					},
					"response": []
				}
			],
			"description": "Genre management endpoints"
		},
		{
			"name": "Books",
			"item": [
				{
					"name": "Create Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Design Patterns\",\n  \"writer\": \"Gang of Four\",\n  \"publisher\": \"Addison-Wesley\",\n  \"publication_year\": 1994,\n  \"description\": \"Elements of Reusable Object-Oriented Software\",\n  \"price\": 54.99,\n  \"stock_quantity\": 80,\n  \"genre_id\": \"genre-uuid-here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						},
						"description": "Create a new book (requires authentication)"
					},
					"response": []
				},
				{
					"name": "Get All Books",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/books",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books"
							]
						},
						"description": "Get all books with pagination"
					},
					"response": []
				},
				{
					"name": "Get Book By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/books/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "book-uuid-here"
								}
							]
						},
						"description": "Get a specific book by ID"
					},
					"response": []
				},
				{
					"name": "Get Books By Genre",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/books/genre/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								"genre",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "genre-uuid-here"
								}
							]
						},
						"description": "Get all books by genre ID"
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Book Title\",\n  \"price\": 59.99,\n  \"stock_quantity\": 100\n}"
						},
						"url": {
							"raw": "{{base_url}}/books/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "book-uuid-here"
								}
							]
						},
						"description": "Update a book by ID"
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/books/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"books",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "book-uuid-here"
								}
							]
						},
						"description": "Delete a book by ID (soft delete)"
					},
					"response": []
				}
			],
			"description": "Book management endpoints"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Create Transaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"items\": [\n    {\n      \"book_id\": \"book-uuid-here\",\n      \"quantity\": 2\n    },\n    {\n      \"book_id\": \"book-uuid-here-2\",\n      \"quantity\": 1\n    }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Create a new transaction (order) with multiple items"
					},
					"response": []
				},
				{
					"name": "Get All Transactions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Get all transactions for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Transaction By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "transaction-uuid-here"
								}
							]
						},
						"description": "Get a specific transaction by ID"
					},
					"response": []
				},
				{
					"name": "Get Transaction Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/statistics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"statistics"
							]
						},
						"description": "Get transaction statistics for the authenticated user"
					},
					"response": []
				}
			],
			"description": "Transaction (Order) management endpoints"
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health-check",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health-check"
					]
				},
				"description": "Check if the server is running"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	]
}
